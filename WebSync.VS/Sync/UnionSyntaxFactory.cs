using Microsoft.CodeAnalysis.CSharp.Syntax;
using Microsoft.CodeAnalysis.CSharp;
using static Microsoft.CodeAnalysis.CSharp.SyntaxFactory;
using Microsoft.CodeAnalysis;

namespace WebSync.VS.Sync
{
    internal static class UnionSyntaxFactory
    {

        public static SyntaxNode GenerateWebSite(string webSiteName, string basePageName, string baseUrl)
        {
            return CompilationUnit()
            .WithUsings(
                List<UsingDirectiveSyntax>(
                    new UsingDirectiveSyntax[]{
                        UsingDirective(
                            IdentifierName("Union"))
                        .WithUsingKeyword(
                            Token(
                                TriviaList(),
                                SyntaxKind.UsingKeyword,
                                TriviaList(
                                    Space)))
                        .WithSemicolonToken(
                            Token(
                                TriviaList(),
                                SyntaxKind.SemicolonToken,
                                TriviaList(
                                    CarriageReturnLineFeed))),
                        UsingDirective(
                            QualifiedName(
                                IdentifierName("Union"),
                                IdentifierName("Attributes")))
                        .WithUsingKeyword(
                            Token(
                                TriviaList(),
                                SyntaxKind.UsingKeyword,
                                TriviaList(
                                    Space)))
                        .WithSemicolonToken(
                            Token(
                                TriviaList(),
                                SyntaxKind.SemicolonToken,
                                TriviaList(
                                    CarriageReturnLineFeed)))}))
            .WithMembers(
                SingletonList<MemberDeclarationSyntax>(
                    NamespaceDeclaration(
                        IdentifierName(
                            Identifier(
                                TriviaList(),
                                "WebSync",
                                TriviaList(
                                    CarriageReturnLineFeed))))
                    .WithNamespaceKeyword(
                        Token(
                            TriviaList(
                                CarriageReturnLineFeed),
                            SyntaxKind.NamespaceKeyword,
                            TriviaList(
                                Space)))
                    .WithOpenBraceToken(
                        Token(
                            TriviaList(),
                            SyntaxKind.OpenBraceToken,
                            TriviaList(
                                CarriageReturnLineFeed)))
                    .WithMembers(
                        SingletonList<MemberDeclarationSyntax>(
                            ClassDeclaration(webSiteName)
                            .WithModifiers(
                                TokenList(
                                    Token(
                                        TriviaList(
                                            Whitespace("    ")),
                                        SyntaxKind.InternalKeyword,
                                        TriviaList(
                                            Space))))
                            .WithKeyword(
                                Token(
                                    TriviaList(),
                                    SyntaxKind.ClassKeyword,
                                    TriviaList(
                                        Space)))
                            .WithBaseList(
                                BaseList(
                                    SingletonSeparatedList<BaseTypeSyntax>(
                                        SimpleBaseType(
                                            GenericName(
                                                Identifier("UnionService"))
                                            .WithTypeArgumentList(
                                                TypeArgumentList(
                                                    SingletonSeparatedList<TypeSyntax>(
                                                        IdentifierName(basePageName)))
                                                .WithGreaterThanToken(
                                                    Token(
                                                        TriviaList(),
                                                        SyntaxKind.GreaterThanToken,
                                                        TriviaList(
                                                            CarriageReturnLineFeed)))))))
                                .WithColonToken(
                                    Token(
                                        TriviaList(),
                                        SyntaxKind.ColonToken,
                                        TriviaList(
                                            Space))))
                            .WithOpenBraceToken(
                                Token(
                                    TriviaList(
                                        Whitespace("    ")),
                                    SyntaxKind.OpenBraceToken,
                                    TriviaList(
                                        CarriageReturnLineFeed)))
                            .WithMembers(
                                SingletonList<MemberDeclarationSyntax>(
                                    PropertyDeclaration(
                                        PredefinedType(
                                            Token(
                                                TriviaList(),
                                                SyntaxKind.StringKeyword,
                                                TriviaList(
                                                    Space))),
                                        Identifier(
                                            TriviaList(),
                                            "BaseUrl",
                                            TriviaList(
                                                Space)))
                                    .WithModifiers(
                                        TokenList(
                                            new[]{
                                                Token(
                                                    TriviaList(
                                                        Whitespace("        ")),
                                                    SyntaxKind.PublicKeyword,
                                                    TriviaList(
                                                        Space)),
                                                Token(
                                                    TriviaList(),
                                                    SyntaxKind.OverrideKeyword,
                                                    TriviaList(
                                                        Space))}))
                                    .WithExpressionBody(
                                        ArrowExpressionClause(
                                            LiteralExpression(
                                                SyntaxKind.StringLiteralExpression,
                                                Literal(baseUrl)))
                                        .WithArrowToken(
                                            Token(
                                                TriviaList(),
                                                SyntaxKind.EqualsGreaterThanToken,
                                                TriviaList(
                                                    Space))))
                                    .WithSemicolonToken(
                                        Token(
                                            TriviaList(),
                                            SyntaxKind.SemicolonToken,
                                            TriviaList(
                                                CarriageReturnLineFeed)))))
                            .WithCloseBraceToken(
                                Token(
                                    TriviaList(
                                        Whitespace("    ")),
                                    SyntaxKind.CloseBraceToken,
                                    TriviaList(
                                        CarriageReturnLineFeed)))))));
        }


        public static CompilationUnitSyntax GeneratePage(string pageName, string absolutePath)
        {
            return CompilationUnit()
                .WithUsings(
                    List<UsingDirectiveSyntax>(
                        new UsingDirectiveSyntax[]{
                            UsingDirective(
                                IdentifierName("Union"))
                            .WithUsingKeyword(
                                Token(
                                    TriviaList(),
                                    SyntaxKind.UsingKeyword,
                                    TriviaList(
                                        Space)))
                            .WithSemicolonToken(
                                Token(
                                    TriviaList(),
                                    SyntaxKind.SemicolonToken,
                                    TriviaList(
                                        CarriageReturnLineFeed))),
                            UsingDirective(
                                QualifiedName(
                                    IdentifierName("Union"),
                                    IdentifierName("Attributes")))
                            .WithUsingKeyword(
                                Token(
                                    TriviaList(),
                                    SyntaxKind.UsingKeyword,
                                    TriviaList(
                                        Space)))
                            .WithSemicolonToken(
                                Token(
                                    TriviaList(),
                                    SyntaxKind.SemicolonToken,
                                    TriviaList(
                                        CarriageReturnLineFeed)))}))
                .WithMembers(
                    SingletonList<MemberDeclarationSyntax>(
                        NamespaceDeclaration(
                                IdentifierName(
                                    Identifier(
                                        TriviaList(),
                                        "WebSync",
                                        TriviaList(CarriageReturnLineFeed))))
                        .WithNamespaceKeyword(
                            Token(
                                TriviaList(
                                    CarriageReturnLineFeed),
                                SyntaxKind.NamespaceKeyword,
                                TriviaList(
                                    Space)))
                        .WithOpenBraceToken(
                            Token(
                                TriviaList(),
                                SyntaxKind.OpenBraceToken,
                                TriviaList(
                                    CarriageReturnLineFeed)))
                        .WithMembers(
                            SingletonList<MemberDeclarationSyntax>(
                                ClassDeclaration(
                                    Identifier(
                                        TriviaList(),
                                        pageName,
                                        TriviaList(
                                            Space)))
                                .WithModifiers(
                                    TokenList(
                                        Token(
                                            TriviaList(
                                                Whitespace("    ")),
                                            SyntaxKind.InternalKeyword,
                                            TriviaList(
                                                Space))))
                                .WithKeyword(
                                    Token(
                                        TriviaList(),
                                        SyntaxKind.ClassKeyword,
                                        TriviaList(
                                            Space)))
                                .WithBaseList(
                                    BaseList(
                                        SingletonSeparatedList<BaseTypeSyntax>(
                                            SimpleBaseType(
                                                IdentifierName(
                                                    Identifier(
                                                        TriviaList(),
                                                        "UnionPage",
                                                        TriviaList(
                                                            CarriageReturnLineFeed))))))
                                    .WithColonToken(
                                        Token(
                                            TriviaList(),
                                            SyntaxKind.ColonToken,
                                            TriviaList(
                                                Space))))
                                .WithOpenBraceToken(
                                    Token(
                                        TriviaList(
                                            Whitespace("    ")),
                                        SyntaxKind.OpenBraceToken,
                                        TriviaList(
                                            CarriageReturnLineFeed)))
                                .WithMembers(
                                    SingletonList<MemberDeclarationSyntax>(
                                        PropertyDeclaration(
                                            PredefinedType(
                                                Token(
                                                    TriviaList(),
                                                    SyntaxKind.StringKeyword,
                                                    TriviaList(
                                                        Space))),
                                            Identifier(
                                                TriviaList(),
                                                "AbsolutePath",
                                                TriviaList(
                                                    Space)))
                                        .WithModifiers(
                                            TokenList(
                                                new[]{
                                                    Token(
                                                        TriviaList(
                                                            Whitespace("        ")),
                                                        SyntaxKind.PublicKeyword,
                                                        TriviaList(
                                                            Space)),
                                                    Token(
                                                        TriviaList(),
                                                        SyntaxKind.OverrideKeyword,
                                                        TriviaList(
                                                            Space))}))
                                        .WithExpressionBody(
                                            ArrowExpressionClause(
                                                LiteralExpression(
                                                    SyntaxKind.StringLiteralExpression,
                                                    Literal(absolutePath)))
                                            .WithArrowToken(
                                                Token(
                                                    TriviaList(),
                                                    SyntaxKind.EqualsGreaterThanToken,
                                                    TriviaList(
                                                        Space))))
                                        .WithSemicolonToken(
                                            Token(
                                                TriviaList(),
                                                SyntaxKind.SemicolonToken,
                                                TriviaList(
                                                    CarriageReturnLineFeed)))))
                                .WithCloseBraceToken(
                                    Token(
                                        TriviaList(
                                            Whitespace("    ")),
                                        SyntaxKind.CloseBraceToken,
                                        TriviaList(
                                            CarriageReturnLineFeed)))))));
        }

        public static SyntaxNode GenerateBasePage(string pageName)
        {
            return CompilationUnit()
                .WithUsings(
                    List<UsingDirectiveSyntax>(
                        new UsingDirectiveSyntax[]{
                            UsingDirective(
                                IdentifierName("Union"))
                            .WithUsingKeyword(
                                Token(
                                    TriviaList(),
                                    SyntaxKind.UsingKeyword,
                                    TriviaList(
                                        Space)))
                            .WithSemicolonToken(
                                Token(
                                    TriviaList(),
                                    SyntaxKind.SemicolonToken,
                                    TriviaList(
                                        CarriageReturnLineFeed))),
                            UsingDirective(
                                QualifiedName(
                                    IdentifierName("Union"),
                                    IdentifierName("Attributes")))
                            .WithUsingKeyword(
                                Token(
                                    TriviaList(),
                                    SyntaxKind.UsingKeyword,
                                    TriviaList(
                                        Space)))
                            .WithSemicolonToken(
                                Token(
                                    TriviaList(),
                                    SyntaxKind.SemicolonToken,
                                    TriviaList(
                                        CarriageReturnLineFeed)))}))
                .WithMembers(
                    SingletonList<MemberDeclarationSyntax>(
                        NamespaceDeclaration(
                            IdentifierName(
                                Identifier(
                                    TriviaList(),
                                    "WebSync",
                                    TriviaList(
                                        CarriageReturnLineFeed))))
                        .WithNamespaceKeyword(
                            Token(
                                TriviaList(
                                    CarriageReturnLineFeed),
                                SyntaxKind.NamespaceKeyword,
                                TriviaList(
                                    Space)))
                        .WithOpenBraceToken(
                            Token(
                                TriviaList(),
                                SyntaxKind.OpenBraceToken,
                                TriviaList(
                                    CarriageReturnLineFeed)))
                        .WithMembers(
                            SingletonList<MemberDeclarationSyntax>(
                                ClassDeclaration(
                                    Identifier(
                                        TriviaList(),
                                        pageName,
                                        TriviaList(
                                            Space)))
                                .WithModifiers(
                                    TokenList(
                                        new[]{
                                            Token(
                                                TriviaList(
                                                    Whitespace("    ")),
                                                SyntaxKind.InternalKeyword,
                                                TriviaList(
                                                    Space)),
                                            Token(
                                                TriviaList(),
                                                SyntaxKind.AbstractKeyword,
                                                TriviaList(
                                                    Space))}))
                                .WithKeyword(
                                    Token(
                                        TriviaList(),
                                        SyntaxKind.ClassKeyword,
                                        TriviaList(
                                            Space)))
                                .WithBaseList(
                                    BaseList(
                                        SingletonSeparatedList<BaseTypeSyntax>(
                                            SimpleBaseType(
                                                IdentifierName(
                                                    Identifier(
                                                        TriviaList(),
                                                        "UnionPage",
                                                        TriviaList(
                                                            CarriageReturnLineFeed))))))
                                    .WithColonToken(
                                        Token(
                                            TriviaList(),
                                            SyntaxKind.ColonToken,
                                            TriviaList(
                                                Space))))
                                .WithOpenBraceToken(
                                    Token(
                                        TriviaList(
                                            Whitespace("    ")),
                                        SyntaxKind.OpenBraceToken,
                                        TriviaList(
                                            CarriageReturnLineFeed)))
                                .WithCloseBraceToken(
                                    Token(
                                        TriviaList(
                                            Whitespace("    ")),
                                        SyntaxKind.CloseBraceToken,
                                        TriviaList(
                                            CarriageReturnLineFeed)))))));
        }

    }
}
